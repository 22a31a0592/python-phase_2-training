def linear_search(arr,key):
    for i in range(len(arr)):
        if arr[i]==key:
            return f"{key} found in the index of{i}"
    return "not found"
arr=[2,5,7,14,9,22]
print(linear_search(arr,14))"""
"""
def Binary_search(arr,key):
    first=0
    last=len(arr)-1
    mid=(first+last)//2
    for i in range(len(arr)):
        if arr[mid]==key:
            return "found"
        elif key<arr[mid]:
            for i in range(0,arr[mid]):
                if arr[i]==key:
                    return "found"
        elif key>arr[mid]:
            for i in range(arr[mid]+1,len(arr)):
                if arr[i]==key:
                    return "found"
    return "not found"

arr=[2,3,4,5,6,7,8]
print(Binary_search(arr,2))  """
#####              Bubble sort
"""
def Bubble_sort():
    for phase in range(len(arr)-1):
        check=True
        for j in range(len(arr)-1-phase):
            if arr[j]>arr[j+1]:
                arr[j],arr[j+1]=arr[j+1],arr[j]
                check=False
        if check: return arr 
    return arr
arr=[23,12,7,14,9,4]
print(Bubble_sort())"""
###########################          selection sort
"""
def selection_sort(arr):
    for i in range(len(arr)-1):
        min=i
        for j in range(i+1,len(arr)):
            if arr[j]<arr[min]:
                min=j
        if min!=i:
            arr[min],arr[i]=arr[i],arr[min]
    return arr
arr=[23,12,7,14,9,4]
print(selection_sort(arr))"""
###################  insertion sort
"""
def insertion_sort(arr):
    for i in range(1,len(arr)):
        j=i-1
        temp=arr[i]
        while j>=0 and arr[j]>temp:
            arr[j+1]=arr[j]
            j-=1
        arr[j+1]=temp  
    return arr
arr=[15,7,3,9,5]
print(insertion_sort(arr))"""
#####                QUICK SORT
def quick_sort(arr,left,right):
    if left<right:
        p_i = partition(arr,left,right)
        quick_sort(arr,left, p_i-1)
        quick_sort(arr,p_i + 1 , right)
def partition(arr,left,right):
 
    i=left
    pivot=arr[right]
    j=right-1
 
    while i<j:
        while i<right and arr[i]<pivot:
            i += 1
        while j>left and arr[j]>=pivot:
            j -= 1
        if i < j:
            arr[i],arr[j]=arr[j],arr[i]
    if arr[i]>pivot:
        arr[i],arr[right]=arr[right],arr[i]
    return i
arr=[15,7,1,25,18]
quick_sort(arr,0,len(arr)-1)
print(arr)

"""

def merge(arr):
    if len(arr)>1:
        left_arr= arr[:len(arr)//2]
        right_arr = arr[len(arr)//2 : ]
 
        merge(left_arr)
        merge(right_arr)
 
        i=0
        j=0
        k=0
 
        while i<len(left_arr) and j<len(right_arr):
            if left_arr[i]<right_arr[j]:
                arr[k]=left_arr[i]
                i+=1
            else:
                arr[k]=right_arr[j]
                j+=1
            k+=1
        while i<len(left_arr):
            arr[k]=left_arr[i]
            i+=1
            k+=1
        while j<len(right_arr):
            arr[k]=right_arr[j]
            j+=1
            k+=1
 
 
 
 
arr=[15 , 7 , 1 , 25 , 18]
merge(arr)   
print(arr)"""
